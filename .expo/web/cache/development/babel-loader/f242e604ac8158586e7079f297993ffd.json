{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _NativeFirebaseError = _interopRequireDefault(require(\"@react-native-firebase/app/lib/internal/NativeFirebaseError\"));\n\nvar transactionId = 0;\n\nvar generateTransactionId = function generateTransactionId() {\n  return transactionId++;\n};\n\nvar DatabaseTransaction = function () {\n  function DatabaseTransaction(database) {\n    (0, _classCallCheck2.default)(this, DatabaseTransaction);\n    this._database = database;\n    this._emitter = database.emitter;\n    this._transactions = {};\n\n    this._emitter.addListener(this._database.eventNameForApp('database_transaction_event'), this._onTransactionEvent.bind(this));\n  }\n\n  (0, _createClass2.default)(DatabaseTransaction, [{\n    key: \"add\",\n    value: function add(reference, transactionUpdater, onComplete) {\n      var applyLocally = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var id = generateTransactionId();\n      this._transactions[id] = {\n        id: id,\n        reference: reference,\n        transactionUpdater: transactionUpdater,\n        onComplete: onComplete,\n        applyLocally: applyLocally,\n        completed: false,\n        started: true\n      };\n\n      this._database.native.transactionStart(reference.path, id, applyLocally);\n    }\n  }, {\n    key: \"_getTransaction\",\n    value: function _getTransaction(id) {\n      return this._transactions[id];\n    }\n  }, {\n    key: \"_removeTransaction\",\n    value: function _removeTransaction(id) {\n      var _this = this;\n\n      setImmediate(function () {\n        delete _this._transactions[id];\n      });\n    }\n  }, {\n    key: \"_onTransactionEvent\",\n    value: function _onTransactionEvent(event) {\n      switch (event.body.type) {\n        case 'update':\n          return this._handleUpdate(event);\n\n        case 'error':\n          return this._handleError(event);\n\n        case 'complete':\n          return this._handleComplete(event);\n\n        default:\n          return undefined;\n      }\n    }\n  }, {\n    key: \"_handleUpdate\",\n    value: function _handleUpdate(event) {\n      var newValue;\n      var id = event.id,\n          body = event.body;\n      var value = body.value;\n\n      try {\n        var transaction = this._getTransaction(id);\n\n        if (!transaction) {\n          return;\n        }\n\n        newValue = transaction.transactionUpdater(value);\n      } finally {\n        var abort = false;\n\n        if (newValue === undefined) {\n          abort = true;\n        }\n\n        this._database.native.transactionTryCommit(id, {\n          value: newValue,\n          abort: abort\n        });\n      }\n    }\n  }, {\n    key: \"_handleError\",\n    value: function _handleError(event) {\n      var transaction = this._getTransaction(event.id);\n\n      if (transaction && !transaction.completed) {\n        transaction.completed = true;\n\n        try {\n          var error = _NativeFirebaseError.default.fromEvent(event.body.error, 'database');\n\n          transaction.onComplete(error, false, null);\n        } finally {\n          this._removeTransaction(event.id);\n        }\n      }\n    }\n  }, {\n    key: \"_handleComplete\",\n    value: function _handleComplete(event) {\n      var transaction = this._getTransaction(event.id);\n\n      if (transaction && !transaction.completed) {\n        transaction.completed = true;\n\n        try {\n          transaction.onComplete(null, event.body.committed, Object.assign({}, event.body.snapshot));\n        } finally {\n          this._removeTransaction(event.id);\n        }\n      }\n    }\n  }]);\n  return DatabaseTransaction;\n}();\n\nexports.default = DatabaseTransaction;","map":{"version":3,"names":["transactionId","generateTransactionId","DatabaseTransaction","database","_database","_emitter","emitter","_transactions","addListener","eventNameForApp","_onTransactionEvent","bind","reference","transactionUpdater","onComplete","applyLocally","id","completed","started","native","transactionStart","path","setImmediate","event","body","type","_handleUpdate","_handleError","_handleComplete","undefined","newValue","value","transaction","_getTransaction","abort","transactionTryCommit","error","NativeError","fromEvent","_removeTransaction","committed","Object","assign","snapshot"],"sources":["C:/Users/sivap/OneDrive/Documents/GitHub/Seewe/node_modules/@react-native-firebase/database/lib/DatabaseTransaction.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport NativeError from '@react-native-firebase/app/lib/internal/NativeFirebaseError';\n\nlet transactionId = 0;\n\n/**\n * Uses the push id generator to create a transaction id\n * @returns {number}\n * @private\n */\n\nconst generateTransactionId = () => transactionId++;\n\nexport default class DatabaseTransaction {\n  constructor(database) {\n    this._database = database;\n    this._emitter = database.emitter;\n    this._transactions = {};\n\n    this._emitter.addListener(\n      this._database.eventNameForApp('database_transaction_event'),\n      this._onTransactionEvent.bind(this),\n    );\n  }\n\n  /**\n   *\n   * @param reference\n   * @param transactionUpdater\n   * @param onComplete\n   * @param applyLocally\n   */\n  add(reference, transactionUpdater, onComplete, applyLocally = false) {\n    const id = generateTransactionId();\n\n    this._transactions[id] = {\n      id,\n      reference,\n      transactionUpdater,\n      onComplete,\n      applyLocally,\n      completed: false,\n      started: true,\n    };\n\n    this._database.native.transactionStart(reference.path, id, applyLocally);\n  }\n\n  /**\n   * Returns a transaction by ID\n   *\n   * @param id\n   * @return {*}\n   * @private\n   */\n  _getTransaction(id) {\n    return this._transactions[id];\n  }\n\n  /**\n   * Removes a transaction by ID on the next event loop\n   *\n   * @param id\n   * @private\n   */\n  _removeTransaction(id) {\n    setImmediate(() => {\n      delete this._transactions[id];\n    });\n  }\n\n  /**\n   *\n   * @param event\n   * @private\n   */\n  _onTransactionEvent(event) {\n    switch (event.body.type) {\n      case 'update':\n        return this._handleUpdate(event);\n      case 'error':\n        return this._handleError(event);\n      case 'complete':\n        return this._handleComplete(event);\n      default:\n        return undefined;\n    }\n  }\n\n  /**\n   *\n   * @param event\n   * @private\n   */\n  _handleUpdate(event) {\n    let newValue;\n\n    const { id, body } = event;\n    const { value } = body;\n\n    try {\n      const transaction = this._getTransaction(id);\n      if (!transaction) {\n        return;\n      }\n      newValue = transaction.transactionUpdater(value);\n    } finally {\n      let abort = false;\n\n      if (newValue === undefined) {\n        abort = true;\n      }\n\n      this._database.native.transactionTryCommit(id, {\n        value: newValue,\n        abort,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param event\n   * @private\n   */\n  _handleError(event) {\n    const transaction = this._getTransaction(event.id);\n\n    if (transaction && !transaction.completed) {\n      transaction.completed = true;\n\n      try {\n        // error, committed, snapshot\n        const error = NativeError.fromEvent(event.body.error, 'database');\n        transaction.onComplete(error, false, null);\n      } finally {\n        this._removeTransaction(event.id);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param event\n   * @private\n   */\n  _handleComplete(event) {\n    const transaction = this._getTransaction(event.id);\n\n    if (transaction && !transaction.completed) {\n      transaction.completed = true;\n\n      try {\n        // error, committed, snapshot\n        transaction.onComplete(null, event.body.committed, Object.assign({}, event.body.snapshot));\n      } finally {\n        this._removeTransaction(event.id);\n      }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}