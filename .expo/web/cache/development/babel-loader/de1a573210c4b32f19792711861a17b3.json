{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.promiseDefer = promiseDefer;\nexports.promiseWithOptionalCallback = promiseWithOptionalCallback;\n\nvar _validate = require(\"./validate\");\n\nfunction promiseDefer() {\n  var deferred = {\n    resolve: null,\n    reject: null\n  };\n  deferred.promise = new Promise(function (resolve, reject) {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n  return deferred;\n}\n\nfunction promiseWithOptionalCallback(promise, callback) {\n  if (!(0, _validate.isFunction)(callback)) {\n    return promise;\n  }\n\n  return promise.then(function (result) {\n    if (callback && callback.length === 1) {\n      callback(null);\n    } else if (callback) {\n      callback(null, result);\n    }\n\n    return result;\n  }).catch(function (error) {\n    if (callback) {\n      callback(error);\n    }\n\n    return Promise.reject(error);\n  });\n}","map":{"version":3,"names":["promiseDefer","deferred","resolve","reject","promise","Promise","promiseWithOptionalCallback","callback","isFunction","then","result","length","catch","error"],"sources":["C:/Users/sivap/OneDrive/Documents/GitHub/Seewe/node_modules/@react-native-firebase/app/lib/common/promise.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isFunction } from './validate';\n\n/**\n *\n */\nexport function promiseDefer() {\n  const deferred = {\n    resolve: null,\n    reject: null,\n  };\n\n  deferred.promise = new Promise((resolve, reject) => {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n\n  return deferred;\n}\n\n/**\n * @param promise\n * @param callback\n */\nexport function promiseWithOptionalCallback(promise, callback) {\n  if (!isFunction(callback)) {\n    return promise;\n  }\n\n  return promise\n    .then(result => {\n      if (callback && callback.length === 1) {\n        callback(null);\n      } else if (callback) {\n        callback(null, result);\n      }\n\n      return result;\n    })\n    .catch(error => {\n      if (callback) {\n        callback(error);\n      }\n      return Promise.reject(error);\n    });\n}\n"],"mappings":";;;;;;AAiBA;;AAKO,SAASA,YAAT,GAAwB;EAC7B,IAAMC,QAAQ,GAAG;IACfC,OAAO,EAAE,IADM;IAEfC,MAAM,EAAE;EAFO,CAAjB;EAKAF,QAAQ,CAACG,OAAT,GAAmB,IAAIC,OAAJ,CAAY,UAACH,OAAD,EAAUC,MAAV,EAAqB;IAClDF,QAAQ,CAACC,OAAT,GAAmBA,OAAnB;IACAD,QAAQ,CAACE,MAAT,GAAkBA,MAAlB;EACD,CAHkB,CAAnB;EAKA,OAAOF,QAAP;AACD;;AAMM,SAASK,2BAAT,CAAqCF,OAArC,EAA8CG,QAA9C,EAAwD;EAC7D,IAAI,CAAC,IAAAC,oBAAA,EAAWD,QAAX,CAAL,EAA2B;IACzB,OAAOH,OAAP;EACD;;EAED,OAAOA,OAAO,CACXK,IADI,CACC,UAAAC,MAAM,EAAI;IACd,IAAIH,QAAQ,IAAIA,QAAQ,CAACI,MAAT,KAAoB,CAApC,EAAuC;MACrCJ,QAAQ,CAAC,IAAD,CAAR;IACD,CAFD,MAEO,IAAIA,QAAJ,EAAc;MACnBA,QAAQ,CAAC,IAAD,EAAOG,MAAP,CAAR;IACD;;IAED,OAAOA,MAAP;EACD,CATI,EAUJE,KAVI,CAUE,UAAAC,KAAK,EAAI;IACd,IAAIN,QAAJ,EAAc;MACZA,QAAQ,CAACM,KAAD,CAAR;IACD;;IACD,OAAOR,OAAO,CAACF,MAAR,CAAeU,KAAf,CAAP;EACD,CAfI,CAAP;AAgBD"},"metadata":{},"sourceType":"script"}