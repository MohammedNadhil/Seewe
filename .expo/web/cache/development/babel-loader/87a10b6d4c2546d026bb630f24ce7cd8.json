{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = MaterialBottomTabView;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _elements = require(\"@react-navigation/elements\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativePaper = require(\"react-native-paper\");\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _excluded = [\"name\", \"color\", \"size\", \"selectionColor\", \"onLayout\"],\n    _excluded2 = [\"state\", \"navigation\", \"descriptors\"],\n    _excluded3 = [\"onPress\", \"route\", \"accessibilityRole\", \"borderless\", \"centered\", \"rippleColor\", \"style\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar MaterialCommunityIcons;\n\ntry {\n  MaterialCommunityIcons = require('react-native-vector-icons/MaterialCommunityIcons').default;\n} catch (e) {\n  var isErrorLogged = false;\n\n  MaterialCommunityIcons = function MaterialCommunityIcons(_ref) {\n    var name = _ref.name,\n        color = _ref.color,\n        size = _ref.size,\n        _0 = _ref.selectionColor,\n        _1 = _ref.onLayout,\n        rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n\n    if (!isErrorLogged) {\n      if (!/(Cannot find module|Module not found|Cannot resolve module)/.test(e.message)) {\n        console.error(e);\n      }\n\n      console.warn(\"Tried to use the icon '\" + name + \"' in a component from '@react-navigation/material-bottom-tabs', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.\", \"To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://reactnavigation.org/docs/material-bottom-tab-navigator/#tabbaricon.\");\n      isErrorLogged = true;\n    }\n\n    return React.createElement(_reactNative.Text, _extends({}, rest, {\n      style: [styles.icon, {\n        color: typeof color !== 'number' ? color : undefined,\n        fontSize: size\n      }]\n    }), \"\\u25A1\");\n  };\n}\n\nfunction MaterialBottomTabViewInner(_ref2) {\n  var state = _ref2.state,\n      navigation = _ref2.navigation,\n      descriptors = _ref2.descriptors,\n      rest = (0, _objectWithoutProperties2.default)(_ref2, _excluded2);\n  var insets = (0, _reactNativeSafeAreaContext.useSafeAreaInsets)();\n\n  var _useTheme = (0, _native.useTheme)(),\n      dark = _useTheme.dark,\n      colors = _useTheme.colors;\n\n  var buildLink = (0, _native.useLinkBuilder)();\n  var theme = React.useMemo(function () {\n    var t = dark ? _reactNativePaper.DarkTheme : _reactNativePaper.DefaultTheme;\n    return Object.assign({}, t, {\n      colors: Object.assign({}, t.colors, colors, {\n        surface: colors.card\n      })\n    });\n  }, [colors, dark]);\n  return React.createElement(_reactNativePaper.BottomNavigation, _extends({}, rest, {\n    theme: theme,\n    navigationState: state,\n    onIndexChange: function onIndexChange(index) {\n      return navigation.dispatch(Object.assign({}, _native.CommonActions.navigate({\n        name: state.routes[index].name,\n        merge: true\n      }), {\n        target: state.key\n      }));\n    },\n    renderScene: function renderScene(_ref3) {\n      var route = _ref3.route;\n      return descriptors[route.key].render();\n    },\n    renderTouchable: _reactNative.Platform.OS === 'web' ? function (_ref4) {\n      var _onPress = _ref4.onPress,\n          route = _ref4.route,\n          _0 = _ref4.accessibilityRole,\n          _1 = _ref4.borderless,\n          _2 = _ref4.centered,\n          _3 = _ref4.rippleColor,\n          style = _ref4.style,\n          rest = (0, _objectWithoutProperties2.default)(_ref4, _excluded3);\n      return React.createElement(_native.Link, _extends({}, rest, {\n        to: buildLink(route.name, route.params),\n        accessibilityRole: \"link\",\n        onPress: function onPress(e) {\n          if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && (e.button == null || e.button === 0)) {\n            e.preventDefault();\n            _onPress === null || _onPress === void 0 ? void 0 : _onPress(e);\n          }\n        },\n        style: [styles.touchable, style]\n      }));\n    } : undefined,\n    renderIcon: function renderIcon(_ref5) {\n      var route = _ref5.route,\n          focused = _ref5.focused,\n          color = _ref5.color;\n      var options = descriptors[route.key].options;\n\n      if (typeof options.tabBarIcon === 'string') {\n        return React.createElement(MaterialCommunityIcons, {\n          name: options.tabBarIcon,\n          color: color,\n          size: 24,\n          style: styles.icon\n        });\n      }\n\n      if (typeof options.tabBarIcon === 'function') {\n        return options.tabBarIcon({\n          focused: focused,\n          color: color\n        });\n      }\n\n      return null;\n    },\n    getLabelText: function getLabelText(_ref6) {\n      var route = _ref6.route;\n      var options = descriptors[route.key].options;\n      return options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    },\n    getColor: function getColor(_ref7) {\n      var route = _ref7.route;\n      return descriptors[route.key].options.tabBarColor;\n    },\n    getBadge: function getBadge(_ref8) {\n      var route = _ref8.route;\n      return descriptors[route.key].options.tabBarBadge;\n    },\n    getAccessibilityLabel: function getAccessibilityLabel(_ref9) {\n      var route = _ref9.route;\n      return descriptors[route.key].options.tabBarAccessibilityLabel;\n    },\n    getTestID: function getTestID(_ref10) {\n      var route = _ref10.route;\n      return descriptors[route.key].options.tabBarTestID;\n    },\n    onTabPress: function onTabPress(_ref11) {\n      var route = _ref11.route,\n          preventDefault = _ref11.preventDefault;\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n\n      if (event.defaultPrevented) {\n        preventDefault();\n      }\n    },\n    safeAreaInsets: insets\n  }));\n}\n\nfunction MaterialBottomTabView(props) {\n  return React.createElement(_elements.SafeAreaProviderCompat, null, React.createElement(MaterialBottomTabViewInner, props));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent'\n  },\n  touchable: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["MaterialBottomTabView.tsx"],"names":["MaterialCommunityIcons","require","isErrorLogged","selectionColor","onLayout","rest","e","console","styles","color","fontSize","size","insets","colors","buildLink","theme","t","dark","surface","card","index","name","state","merge","target","key","route","descriptors","accessibilityRole","borderless","centered","rippleColor","onPress","options","icon","focused","preventDefault","event","type","canPreventDefault","backgroundColor","touchable","display","justifyContent"],"mappings":"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","sourcesContent":["import { SafeAreaProviderCompat } from '@react-navigation/elements';\nimport {\n  CommonActions,\n  Link,\n  ParamListBase,\n  Route,\n  TabNavigationState,\n  useLinkBuilder,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet, Text } from 'react-native';\nimport { BottomNavigation, DarkTheme, DefaultTheme } from 'react-native-paper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport type {\n  MaterialBottomTabDescriptorMap,\n  MaterialBottomTabNavigationConfig,\n  MaterialBottomTabNavigationHelpers,\n} from '../types';\n\ntype Props = MaterialBottomTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: MaterialBottomTabNavigationHelpers;\n  descriptors: MaterialBottomTabDescriptorMap;\n};\n\ntype Scene = { route: { key: string } };\n\n// Optionally require vector-icons referenced from react-native-paper:\n// https://github.com/callstack/react-native-paper/blob/4b26429c49053eaa4c3e0fae208639e01093fa87/src/components/MaterialCommunityIcon.tsx#L14\nlet MaterialCommunityIcons: React.ComponentType<\n  React.ComponentProps<\n    typeof import('react-native-vector-icons/MaterialCommunityIcons').default\n  >\n>;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons =\n    require('react-native-vector-icons/MaterialCommunityIcons').default;\n} catch (e: any) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  MaterialCommunityIcons = ({\n    name,\n    color,\n    size,\n    selectionColor: _0,\n    onLayout: _1,\n    ...rest\n  }) => {\n    if (!isErrorLogged) {\n      if (\n        !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n          e.message\n        )\n      ) {\n        console.error(e);\n      }\n\n      console.warn(\n        `Tried to use the icon '${name}' in a component from '@react-navigation/material-bottom-tabs', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,\n        `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://reactnavigation.org/docs/material-bottom-tab-navigator/#tabbaricon.`\n      );\n\n      isErrorLogged = true;\n    }\n\n    return (\n      // @ts-expect-error: we're passing icon props to text, but we don't care about it since it's just fallback\n      <Text\n        {...rest}\n        style={[\n          styles.icon,\n          {\n            color: typeof color !== 'number' ? color : undefined,\n            fontSize: size,\n          },\n        ]}\n      >\n        □\n      </Text>\n    );\n  };\n}\n\nfunction MaterialBottomTabViewInner({\n  state,\n  navigation,\n  descriptors,\n  ...rest\n}: Props) {\n  const insets = useSafeAreaInsets();\n  const { dark, colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const theme = React.useMemo(() => {\n    const t = dark ? DarkTheme : DefaultTheme;\n\n    return {\n      ...t,\n      colors: {\n        ...t.colors,\n        ...colors,\n        surface: colors.card,\n      },\n    };\n  }, [colors, dark]);\n\n  return (\n    <BottomNavigation\n      {...rest}\n      theme={theme}\n      navigationState={state}\n      onIndexChange={(index: number) =>\n        navigation.dispatch({\n          ...CommonActions.navigate({\n            name: state.routes[index].name,\n            merge: true,\n          }),\n          target: state.key,\n        })\n      }\n      renderScene={({ route }) => descriptors[route.key].render()}\n      renderTouchable={\n        Platform.OS === 'web'\n          ? ({\n              onPress,\n              route,\n              accessibilityRole: _0,\n              borderless: _1,\n              centered: _2,\n              rippleColor: _3,\n              style,\n              ...rest\n            }) => {\n              return (\n                <Link\n                  {...rest}\n                  // @ts-expect-error: to could be undefined, but it doesn't affect functionality\n                  to={buildLink(route.name, route.params)}\n                  accessibilityRole=\"link\"\n                  onPress={(e: any) => {\n                    if (\n                      !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n                      (e.button == null || e.button === 0) // ignore everything but left clicks\n                    ) {\n                      e.preventDefault();\n                      onPress?.(e);\n                    }\n                  }}\n                  style={[styles.touchable, style]}\n                />\n              );\n            }\n          : undefined\n      }\n      renderIcon={({ route, focused, color }) => {\n        const { options } = descriptors[route.key];\n\n        if (typeof options.tabBarIcon === 'string') {\n          return (\n            <MaterialCommunityIcons\n              name={options.tabBarIcon}\n              color={color}\n              size={24}\n              style={styles.icon}\n            />\n          );\n        }\n\n        if (typeof options.tabBarIcon === 'function') {\n          return options.tabBarIcon({ focused, color });\n        }\n\n        return null;\n      }}\n      getLabelText={({ route }: Scene) => {\n        const { options } = descriptors[route.key];\n\n        return options.tabBarLabel !== undefined\n          ? options.tabBarLabel\n          : options.title !== undefined\n          ? options.title\n          : (route as Route<string>).name;\n      }}\n      getColor={({ route }) => descriptors[route.key].options.tabBarColor}\n      getBadge={({ route }) => descriptors[route.key].options.tabBarBadge}\n      getAccessibilityLabel={({ route }) =>\n        descriptors[route.key].options.tabBarAccessibilityLabel\n      }\n      getTestID={({ route }) => descriptors[route.key].options.tabBarTestID}\n      onTabPress={({ route, preventDefault }) => {\n        const event = navigation.emit({\n          type: 'tabPress',\n          target: route.key,\n          canPreventDefault: true,\n        });\n\n        if (event.defaultPrevented) {\n          preventDefault();\n        }\n      }}\n      safeAreaInsets={insets}\n    />\n  );\n}\n\nexport default function MaterialBottomTabView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <MaterialBottomTabViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n  touchable: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}