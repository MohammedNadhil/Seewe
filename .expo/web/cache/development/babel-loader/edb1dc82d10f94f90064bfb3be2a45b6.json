{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _common = require(\"@react-native-firebase/app/lib/common\");\n\nvar _DatabaseDataSnapshot = _interopRequireDefault(require(\"./DatabaseDataSnapshot\"));\n\nvar _DatabaseOnDisconnect = _interopRequireDefault(require(\"./DatabaseOnDisconnect\"));\n\nvar _DatabaseQuery2 = _interopRequireWildcard(require(\"./DatabaseQuery\"));\n\nvar _DatabaseQueryModifiers = _interopRequireDefault(require(\"./DatabaseQueryModifiers\"));\n\nvar _DatabaseThenableReference = _interopRequireWildcard(require(\"./DatabaseThenableReference\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar internalRefs = ['.info/connected', '.info/serverTimeOffset'];\n\nvar DatabaseReference = function (_DatabaseQuery) {\n  (0, _inherits2.default)(DatabaseReference, _DatabaseQuery);\n\n  var _super = _createSuper(DatabaseReference);\n\n  function DatabaseReference(database, path) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, DatabaseReference);\n\n    if (!internalRefs.includes(path) && !(0, _common.isValidPath)(path)) {\n      throw new Error('firebase.database() Paths must be non-empty strings and can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n    }\n\n    _this = _super.call(this, database, path, new _DatabaseQueryModifiers.default());\n    _this._database = database;\n    return _this;\n  }\n\n  (0, _createClass2.default)(DatabaseReference, [{\n    key: \"parent\",\n    get: function get() {\n      var parentPath = (0, _common.pathParent)(this.path);\n\n      if (parentPath === null) {\n        return null;\n      }\n\n      return new DatabaseReference(this._database, parentPath);\n    }\n  }, {\n    key: \"root\",\n    get: function get() {\n      return new DatabaseReference(this._database, '/');\n    }\n  }, {\n    key: \"child\",\n    value: function child(path) {\n      if (!(0, _common.isString)(path)) {\n        throw new Error(\"firebase.database().ref().child(*) 'path' must be a string value.\");\n      }\n\n      return new DatabaseReference(this._database, (0, _common.pathChild)(this.path, path));\n    }\n  }, {\n    key: \"set\",\n    value: function set(value, onComplete) {\n      if ((0, _common.isUndefined)(value)) {\n        throw new Error(\"firebase.database().ref().set(*) 'value' must be defined.\");\n      }\n\n      if (!(0, _common.isUndefined)(onComplete) && !(0, _common.isFunction)(onComplete)) {\n        throw new Error(\"firebase.database().ref().set(_, *) 'onComplete' must be a function if provided.\");\n      }\n\n      return (0, _common.promiseWithOptionalCallback)(this._database.native.set(this.path, {\n        value: value\n      }), onComplete);\n    }\n  }, {\n    key: \"update\",\n    value: function update(values, onComplete) {\n      if (!(0, _common.isObject)(values)) {\n        throw new Error(\"firebase.database().ref().update(*) 'values' must be an object.\");\n      }\n\n      var keys = Object.keys(values);\n\n      for (var i = 0; i < keys.length; i++) {\n        if (!(0, _common.isValidPath)(keys[i])) {\n          throw new Error('firebase.database().update(*) \\'values\\' contains an invalid path. Paths must be non-empty strings and can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\n        }\n      }\n\n      if (!(0, _common.isUndefined)(onComplete) && !(0, _common.isFunction)(onComplete)) {\n        throw new Error(\"firebase.database().ref().update(_, *) 'onComplete' must be a function if provided.\");\n      }\n\n      return (0, _common.promiseWithOptionalCallback)(this._database.native.update(this.path, {\n        values: values\n      }), onComplete);\n    }\n  }, {\n    key: \"setWithPriority\",\n    value: function setWithPriority(newVal, newPriority, onComplete) {\n      if ((0, _common.isUndefined)(newVal)) {\n        throw new Error(\"firebase.database().ref().setWithPriority(*) 'newVal' must be defined.\");\n      }\n\n      if (!(0, _common.isNumber)(newPriority) && !(0, _common.isString)(newPriority) && !(0, _common.isNull)(newPriority)) {\n        throw new Error(\"firebase.database().ref().setWithPriority(_, *) 'newPriority' must be a number, string or null value.\");\n      }\n\n      if (!(0, _common.isUndefined)(onComplete) && !(0, _common.isFunction)(onComplete)) {\n        throw new Error(\"firebase.database().ref().setWithPriority(_, _, *) 'onComplete' must be a function if provided.\");\n      }\n\n      return (0, _common.promiseWithOptionalCallback)(this._database.native.setWithPriority(this.path, {\n        value: newVal,\n        priority: newPriority\n      }), onComplete);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(onComplete) {\n      if (!(0, _common.isUndefined)(onComplete) && !(0, _common.isFunction)(onComplete)) {\n        throw new Error(\"firebase.database().ref().remove(*) 'onComplete' must be a function if provided.\");\n      }\n\n      return (0, _common.promiseWithOptionalCallback)(this._database.native.remove(this.path), onComplete);\n    }\n  }, {\n    key: \"transaction\",\n    value: function transaction(transactionUpdate, onComplete, applyLocally) {\n      var _this2 = this;\n\n      if (!(0, _common.isFunction)(transactionUpdate)) {\n        throw new Error(\"firebase.database().ref().transaction(*) 'transactionUpdate' must be a function.\");\n      }\n\n      if (!(0, _common.isUndefined)(onComplete) && !(0, _common.isFunction)(onComplete)) {\n        throw new Error(\"firebase.database().ref().transaction(_, *) 'onComplete' must be a function if provided.\");\n      }\n\n      if (!(0, _common.isUndefined)(applyLocally) && !(0, _common.isBoolean)(applyLocally)) {\n        throw new Error(\"firebase.database().ref().transaction(_, _, *) 'applyLocally' must be a boolean value if provided.\");\n      }\n\n      return new Promise(function (resolve, reject) {\n        var onCompleteWrapper = function onCompleteWrapper(error, committed, snapshotData) {\n          if ((0, _common.isFunction)(onComplete)) {\n            if (error) {\n              onComplete(error, committed, null);\n            } else {\n              onComplete(null, committed, new _DatabaseDataSnapshot.default(_this2, snapshotData));\n            }\n          }\n\n          if (error) {\n            return reject(error);\n          }\n\n          return resolve({\n            committed: committed,\n            snapshot: new _DatabaseDataSnapshot.default(_this2, snapshotData)\n          });\n        };\n\n        _this2._database._transaction.add(_this2, transactionUpdate, onCompleteWrapper, applyLocally);\n      });\n    }\n  }, {\n    key: \"setPriority\",\n    value: function setPriority(priority, onComplete) {\n      if (!(0, _common.isNumber)(priority) && !(0, _common.isString)(priority) && !(0, _common.isNull)(priority)) {\n        throw new Error(\"firebase.database().ref().setPriority(*) 'priority' must be a number, string or null value.\");\n      }\n\n      if (!(0, _common.isUndefined)(onComplete) && !(0, _common.isFunction)(onComplete)) {\n        throw new Error(\"firebase.database().ref().setPriority(_, *) 'onComplete' must be a function if provided.\");\n      }\n\n      return (0, _common.promiseWithOptionalCallback)(this._database.native.setPriority(this.path, {\n        priority: priority\n      }), onComplete);\n    }\n  }, {\n    key: \"push\",\n    value: function push(value, onComplete) {\n      if (!(0, _common.isUndefined)(onComplete) && !(0, _common.isFunction)(onComplete)) {\n        throw new Error(\"firebase.database().ref().push(_, *) 'onComplete' must be a function if provided.\");\n      }\n\n      var id = (0, _common.generateDatabaseId)(this._database._serverTimeOffset);\n\n      if ((0, _common.isUndefined)(value) || (0, _common.isNull)(value)) {\n        return new _DatabaseThenableReference.default(this._database, (0, _common.pathChild)(this.path, id), Promise.resolve(this.child(id)));\n      }\n\n      var pushRef = this.child(id);\n      var promise = pushRef.set(value, onComplete).then(function () {\n        return pushRef;\n      });\n\n      if (onComplete) {\n        promise.catch(function () {});\n      }\n\n      return new _DatabaseThenableReference.default(this._database, (0, _common.pathChild)(this.path, id), promise);\n    }\n  }, {\n    key: \"onDisconnect\",\n    value: function onDisconnect() {\n      return new _DatabaseOnDisconnect.default(this);\n    }\n  }]);\n  return DatabaseReference;\n}(_DatabaseQuery2.default);\n\nexports.default = DatabaseReference;\n(0, _DatabaseQuery2.provideReferenceClass)(DatabaseReference);\n(0, _DatabaseThenableReference.provideReferenceClass)(DatabaseReference);","map":{"version":3,"names":["internalRefs","DatabaseReference","database","path","includes","isValidPath","Error","DatabaseQueryModifiers","_database","parentPath","pathParent","isString","pathChild","value","onComplete","isUndefined","isFunction","promiseWithOptionalCallback","native","set","values","isObject","keys","Object","i","length","update","newVal","newPriority","isNumber","isNull","setWithPriority","priority","remove","transactionUpdate","applyLocally","isBoolean","Promise","resolve","reject","onCompleteWrapper","error","committed","snapshotData","DatabaseDataSnapshot","snapshot","_transaction","add","setPriority","id","generateDatabaseId","_serverTimeOffset","DatabaseThenableReference","child","pushRef","promise","then","catch","DatabaseOnDisconnect","DatabaseQuery","provideReferenceClassForQuery","provideReferenceClassForThenable"],"sources":["C:/Users/sivap/OneDrive/Documents/GitHub/Seewe/node_modules/@react-native-firebase/database/lib/DatabaseReference.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  generateDatabaseId,\n  isBoolean,\n  isFunction,\n  isNull,\n  isNumber,\n  isObject,\n  isString,\n  isUndefined,\n  isValidPath,\n  pathChild,\n  pathParent,\n  promiseWithOptionalCallback,\n} from '@react-native-firebase/app/lib/common';\nimport DatabaseDataSnapshot from './DatabaseDataSnapshot';\nimport DatabaseOnDisconnect from './DatabaseOnDisconnect';\nimport DatabaseQuery, {\n  provideReferenceClass as provideReferenceClassForQuery,\n} from './DatabaseQuery';\nimport DatabaseQueryModifiers from './DatabaseQueryModifiers';\nimport DatabaseThenableReference, {\n  provideReferenceClass as provideReferenceClassForThenable,\n} from './DatabaseThenableReference';\n\nconst internalRefs = ['.info/connected', '.info/serverTimeOffset'];\n\nexport default class DatabaseReference extends DatabaseQuery {\n  constructor(database, path) {\n    // Validate the reference path\n    if (!internalRefs.includes(path) && !isValidPath(path)) {\n      throw new Error(\n        'firebase.database() Paths must be non-empty strings and can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"',\n      );\n    }\n\n    super(database, path, new DatabaseQueryModifiers());\n    this._database = database;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference.html#parent\n   */\n  get parent() {\n    const parentPath = pathParent(this.path);\n    if (parentPath === null) {\n      return null;\n    }\n    return new DatabaseReference(this._database, parentPath);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference.html#root\n   */\n  get root() {\n    return new DatabaseReference(this._database, '/');\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference.html#child\n   * @param path\n   */\n  child(path) {\n    if (!isString(path)) {\n      throw new Error(\"firebase.database().ref().child(*) 'path' must be a string value.\");\n    }\n    return new DatabaseReference(this._database, pathChild(this.path, path));\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference.html#set\n   * @param value\n   * @param onComplete\n   */\n  set(value, onComplete) {\n    if (isUndefined(value)) {\n      throw new Error(\"firebase.database().ref().set(*) 'value' must be defined.\");\n    }\n\n    if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n      throw new Error(\n        \"firebase.database().ref().set(_, *) 'onComplete' must be a function if provided.\",\n      );\n    }\n\n    return promiseWithOptionalCallback(this._database.native.set(this.path, { value }), onComplete);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference.html#update\n   * @param values\n   * @param onComplete\n   */\n  update(values, onComplete) {\n    if (!isObject(values)) {\n      throw new Error(\"firebase.database().ref().update(*) 'values' must be an object.\");\n    }\n\n    const keys = Object.keys(values);\n    for (let i = 0; i < keys.length; i++) {\n      if (!isValidPath(keys[i])) {\n        throw new Error(\n          'firebase.database().update(*) \\'values\\' contains an invalid path. Paths must be non-empty strings and can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"',\n        );\n      }\n    }\n\n    if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n      throw new Error(\n        \"firebase.database().ref().update(_, *) 'onComplete' must be a function if provided.\",\n      );\n    }\n\n    return promiseWithOptionalCallback(\n      this._database.native.update(this.path, { values }),\n      onComplete,\n    );\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference#setwithpriority\n   * @param newVal\n   * @param newPriority\n   * @param onComplete\n   */\n  setWithPriority(newVal, newPriority, onComplete) {\n    if (isUndefined(newVal)) {\n      throw new Error(\"firebase.database().ref().setWithPriority(*) 'newVal' must be defined.\");\n    }\n\n    if (!isNumber(newPriority) && !isString(newPriority) && !isNull(newPriority)) {\n      throw new Error(\n        \"firebase.database().ref().setWithPriority(_, *) 'newPriority' must be a number, string or null value.\",\n      );\n    }\n\n    if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n      throw new Error(\n        \"firebase.database().ref().setWithPriority(_, _, *) 'onComplete' must be a function if provided.\",\n      );\n    }\n\n    return promiseWithOptionalCallback(\n      this._database.native.setWithPriority(this.path, {\n        value: newVal,\n        priority: newPriority,\n      }),\n      onComplete,\n    );\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference#remove\n   * @param onComplete\n   */\n  remove(onComplete) {\n    if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n      throw new Error(\n        \"firebase.database().ref().remove(*) 'onComplete' must be a function if provided.\",\n      );\n    }\n\n    return promiseWithOptionalCallback(this._database.native.remove(this.path), onComplete);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference#transaction\n   * @param transactionUpdate\n   * @param onComplete\n   * @param applyLocally\n   */\n  transaction(transactionUpdate, onComplete, applyLocally) {\n    if (!isFunction(transactionUpdate)) {\n      throw new Error(\n        \"firebase.database().ref().transaction(*) 'transactionUpdate' must be a function.\",\n      );\n    }\n\n    if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n      throw new Error(\n        \"firebase.database().ref().transaction(_, *) 'onComplete' must be a function if provided.\",\n      );\n    }\n\n    if (!isUndefined(applyLocally) && !isBoolean(applyLocally)) {\n      throw new Error(\n        \"firebase.database().ref().transaction(_, _, *) 'applyLocally' must be a boolean value if provided.\",\n      );\n    }\n\n    return new Promise((resolve, reject) => {\n      const onCompleteWrapper = (error, committed, snapshotData) => {\n        if (isFunction(onComplete)) {\n          if (error) {\n            onComplete(error, committed, null);\n          } else {\n            onComplete(null, committed, new DatabaseDataSnapshot(this, snapshotData));\n          }\n        }\n\n        if (error) {\n          return reject(error);\n        }\n        return resolve({\n          committed,\n          snapshot: new DatabaseDataSnapshot(this, snapshotData),\n        });\n      };\n\n      // start the transaction natively\n      this._database._transaction.add(this, transactionUpdate, onCompleteWrapper, applyLocally);\n    });\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference#setpriority\n   * @param priority\n   * @param onComplete\n   */\n  setPriority(priority, onComplete) {\n    if (!isNumber(priority) && !isString(priority) && !isNull(priority)) {\n      throw new Error(\n        \"firebase.database().ref().setPriority(*) 'priority' must be a number, string or null value.\",\n      );\n    }\n\n    if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n      throw new Error(\n        \"firebase.database().ref().setPriority(_, *) 'onComplete' must be a function if provided.\",\n      );\n    }\n\n    return promiseWithOptionalCallback(\n      this._database.native.setPriority(this.path, { priority }),\n      onComplete,\n    );\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference#push\n   * @param value\n   * @param onComplete\n   * @returns {DatabaseReference}\n   */\n  push(value, onComplete) {\n    if (!isUndefined(onComplete) && !isFunction(onComplete)) {\n      throw new Error(\n        \"firebase.database().ref().push(_, *) 'onComplete' must be a function if provided.\",\n      );\n    }\n\n    const id = generateDatabaseId(this._database._serverTimeOffset);\n\n    if (isUndefined(value) || isNull(value)) {\n      return new DatabaseThenableReference(\n        this._database,\n        pathChild(this.path, id),\n        Promise.resolve(this.child(id)),\n      );\n    }\n\n    const pushRef = this.child(id);\n\n    const promise = pushRef.set(value, onComplete).then(() => pushRef);\n\n    // Prevent unhandled promise rejection if onComplete is passed\n    if (onComplete) {\n      promise.catch(() => {});\n    }\n\n    return new DatabaseThenableReference(this._database, pathChild(this.path, id), promise);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.database.Reference#ondisconnect\n   */\n  onDisconnect() {\n    return new DatabaseOnDisconnect(this);\n  }\n}\n\n// To avoid React Native require cycle warnings\nprovideReferenceClassForQuery(DatabaseReference);\nprovideReferenceClassForThenable(DatabaseReference);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}